import org.gradle.internal.jvm.Jvm

plugins {
    id 'c'
    id 'cpp'
    id 'visual-studio'
    id 'edu.wpi.first.NativeUtils' version '2024.3.1'
    id 'edu.wpi.first.GradleVsCode' version '1.3.0'
}

repositories {
    mavenCentral()
}

ext.licenseFile = file("$rootDir/LICENSE.txt")

apply from: 'config.gradle'

def outputsFolder = file("$buildDir/allOutputs")

task copyAllOutputs(type: Copy) {
    destinationDir outputsFolder
}

build.dependsOn copyAllOutputs

ext.addTaskToCopyAllOutputs = { task ->
    copyAllOutputs.dependsOn task
    copyAllOutputs.inputs.file task.archiveFile
    copyAllOutputs.from task.archiveFile
}

nativeUtils {
  exportsConfigs {
    // Main library is just default empty. This will export everything
    apriltag {
    }
  }
}

model {
    components {
        apriltaglib(NativeLibrarySpec) {
            sources {
                c {
                    source {
                        srcDirs 'apriltag'
                        include 'apriltag.c', 'apriltag_pose.c', 'apriltag_quad_thresh.c', 'tagStandard41h12.c', 'tag16h5.c', 'tag25h9.c', 'tag36h11.c',
                            'tagCircle21h7.c', 'tagCircle49h12.c', 'tagCustom48h12.c', 'tagStandard52h13.c', "common/*.c"
                    }
                    exportedHeaders {
                        srcDirs 'apriltag'
                        include '**/*.h'
                    }
                }
                cpp {
                    source {
                        srcDirs 'apriltag'
                        include 'common/pthreads_cross.cpp'
                    }
                    exportedHeaders {
                        srcDirs 'apriltag'
                        include '**/*.h'
                    }
                }
            }
            binaries.withType(SharedLibraryBinarySpec) {
                buildable = false
            }
            appendDebugPathToBinaries(binaries)
        }
    }
}

apply from: 'publish.gradle'

wrapper {
    gradleVersion = '8.1'
}
