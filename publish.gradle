apply plugin: 'maven-publish'

publishing {
    repositories {
        maven {
            url "${System.getProperty('user.home')}/releases/maven/development"
        }
        maven {
            url "${System.getProperty('user.home')}/releases/maven/release"
        }
    }
}

def releaseNumber = 6

def pubVersion = "3.2.0-$releaseNumber"

def baseArtifactId = 'apriltaglib'
def artifactGroupId = 'edu.wpi.first.thirdparty.frc2023'
def zipBaseName = '_GROUP_edu_wpi_first_thirdparty_frc2023_ID_apriltaglib_CLS'

def outputsFolder = file("$project.buildDir/outputs")

def versionFile = file("$outputsFolder/version.txt")

task outputVersions() {
    description = 'Prints the versions of this to a file for use by the downstream packaging project'
    group = 'Build'
    outputs.files(versionFile)

    doFirst {
        buildDir.mkdir()
        outputsFolder.mkdir()
    }

    doLast {
        versionFile.write pubVersion
    }
}

build.dependsOn outputVersions
copyAllOutputs.dependsOn outputVersions
copyAllOutputs.inputs.file versionFile
copyAllOutputs.from versionFile

task cSourcesZip(type: Zip) {
    destinationDirectory = outputsFolder
    archiveBaseName = zipBaseName
    archiveClassifier = "sources"

    from(licenseFile) {
        into '/'
    }

    from('apriltag/') {
        include "*.h"
        include "*.c"
        into '/'
    }
}

task cHeadersZip(type: Zip) {
    destinationDirectory = outputsFolder
    archiveBaseName = zipBaseName
    archiveClassifier = "headers"

    from(licenseFile) {
        into '/'
    }

    from('apriltag/') {
        into '/'
        include "*.h"
    }
    from('apriltag/common/') {
        include "*.h"
        into '/common'
    }
}

build.dependsOn cHeadersZip
build.dependsOn cSourcesZip

addTaskToCopyAllOutputs(cHeadersZip)
addTaskToCopyAllOutputs(cSourcesZip)

model {
    publishing {
        def gTaskList = createComponentZipTasks($.components, ['apriltaglib'], zipBaseName, Zip, project, includeStandardZipFormat)
        publications {
            c(MavenPublication) {
                gTaskList.each {
                    artifact it
                }
                artifact cHeadersZip
                artifact cSourcesZip

                artifactId = baseArtifactId
                groupId artifactGroupId
                version pubVersion
            }
        }
    }
}
